
Discarded input sections

 .text          0x00000000        0x0 obj/startup.o
 .data          0x00000000        0x0 obj/startup.o
 .bss           0x00000000        0x0 obj/startup.o
 .text          0x00000000        0x0 obj/system_MKL46Z4.o
 .data          0x00000000        0x0 obj/system_MKL46Z4.o
 .bss           0x00000000        0x0 obj/system_MKL46Z4.o
 .text.SystemCoreClockUpdate
                0x00000000      0x174 obj/system_MKL46Z4.o
 .data.SystemCoreClock
                0x00000000        0x4 obj/system_MKL46Z4.o
 .text          0x00000000        0x0 obj/main.o
 .data          0x00000000        0x0 obj/main.o
 .bss           0x00000000        0x0 obj/main.o
 .data          0x00000000        0x0 obj/startup_MKL46Z4.o
 .bss           0x00000000        0x0 obj/startup_MKL46Z4.o

Memory Configuration

Name             Origin             Length             Attributes
m_interrupts     0x00000000         0x00000400         xr
m_flash_config   0x00000400         0x00000010         xr
m_text           0x00000410         0x0003fbf0         xr
m_data           0x1fffe000         0x00008000         rw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD obj/startup.o
LOAD obj/system_MKL46Z4.o
LOAD obj/main.o
LOAD obj/startup_MKL46Z4.o
                0x00000400                HEAP_SIZE = DEFINED (__heap_size__)?__heap_size__:0x400
                0x00000400                STACK_SIZE = DEFINED (__stack_size__)?__stack_size__:0x400
                0x00000000                M_VECTOR_RAM_SIZE = DEFINED (__ram_vector_table__)?0x200:0x0

.interrupts     0x00000000       0xc0
                0x00000000                __VECTOR_TABLE = .
                0x00000000                . = ALIGN (0x4)
 *(.isr_vector)
 .isr_vector    0x00000000       0xc0 obj/startup_MKL46Z4.o
                0x00000000                __isr_vector
                0x000000c0                . = ALIGN (0x4)

.flash_config   0x00000400       0x10
                0x00000400                . = ALIGN (0x4)
 *(.FlashConfig)
 .FlashConfig   0x00000400       0x10 obj/startup_MKL46Z4.o
                0x00000410                . = ALIGN (0x4)

.text           0x00000410      0x160
                0x00000410                . = ALIGN (0x4)
 *(.text)
 .text          0x00000410       0x44 obj/startup_MKL46Z4.o
                0x00000410                Reset_Handler
                0x00000450                HardFault_Handler
                0x00000450                SysTick_Handler
                0x00000450                PendSV_Handler
                0x00000450                NMI_Handler
                0x00000450                PORTC_PORTD_IRQHandler
                0x00000450                I2C1_IRQHandler
                0x00000450                UART1_IRQHandler
                0x00000450                DMA2_IRQHandler
                0x00000450                TPM0_IRQHandler
                0x00000450                I2S0_IRQHandler
                0x00000450                LLWU_IRQHandler
                0x00000450                TSI0_IRQHandler
                0x00000450                UART0_IRQHandler
                0x00000450                ADC0_IRQHandler
                0x00000450                SPI1_IRQHandler
                0x00000450                DefaultISR
                0x00000450                TPM2_IRQHandler
                0x00000450                RTC_IRQHandler
                0x00000450                I2C0_IRQHandler
                0x00000450                LCD_IRQHandler
                0x00000450                RTC_Seconds_IRQHandler
                0x00000450                MCG_IRQHandler
                0x00000450                UART2_IRQHandler
                0x00000450                Reserved20_IRQHandler
                0x00000450                USB0_IRQHandler
                0x00000450                PIT_IRQHandler
                0x00000450                SVC_Handler
                0x00000450                DMA3_IRQHandler
                0x00000450                DMA0_IRQHandler
                0x00000450                DAC0_IRQHandler
                0x00000450                TPM1_IRQHandler
                0x00000450                LVD_LVW_IRQHandler
                0x00000450                SPI0_IRQHandler
                0x00000450                PORTA_IRQHandler
                0x00000450                FTFA_IRQHandler
                0x00000450                LPTMR0_IRQHandler
                0x00000450                CMP0_IRQHandler
                0x00000450                DMA1_IRQHandler
 *(.text*)
 .text.init_data_bss
                0x00000454       0x90 obj/startup.o
                0x00000454                init_data_bss
 .text.SystemInit
                0x000004e4       0x10 obj/system_MKL46Z4.o
                0x000004e4                SystemInit
 .text.main     0x000004f4       0x7c obj/main.o
                0x000004f4                main
 *(.rodata)
 *(.rodata*)
 *(.glue_7)
 .glue_7        0x00000000        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x00000000        0x0 linker stubs
 *(.eh_frame)
 *(.init)
 *(.fini)
                0x00000570                . = ALIGN (0x4)

.vfp11_veneer   0x00000570        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00000570        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x00000570        0x0
 .iplt          0x00000000        0x0 obj/startup.o

.rel.dyn        0x00000570        0x0
 .rel.iplt      0x00000000        0x0 obj/startup.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)

.ARM            0x00000570        0x0
                0x00000570                __exidx_start = .
 *(.ARM.exidx*)
                0x00000570                __exidx_end = .

.ctors          0x00000570        0x0
                0x00000570                __CTOR_LIST__ = .
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)
                0x00000570                __CTOR_END__ = .

.dtors          0x00000570        0x0
                0x00000570                __DTOR_LIST__ = .
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)
                0x00000570                __DTOR_END__ = .

.preinit_array  0x00000570        0x0
                0x00000570                PROVIDE (__preinit_array_start, .)
 *(.preinit_array*)
                0x00000570                PROVIDE (__preinit_array_end, .)

.init_array     0x00000570        0x0
                0x00000570                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*))
 *(.init_array*)
                0x00000570                PROVIDE (__init_array_end, .)

.fini_array     0x00000570        0x0
                0x00000570                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*))
 *(.fini_array*)
                0x00000570                PROVIDE (__fini_array_end, .)
                0x00000570                __etext = .
                0x00000570                __DATA_ROM = .

.mtb            0x1fffe000        0x0
                0x1fffe000                . = ALIGN (0x8)
                0x1fffe000                _mtb_start = .
 *(.mtb_buf)
                0x1fffe000                . = ALIGN (0x8)
                0x1fffe000                _mtb_end = .

.interrupts_ram
                0x1fffe000        0x0
                0x1fffe000                . = ALIGN (0x4)
                0x1fffe000                __VECTOR_RAM__ = .
                0x1fffe000                __interrupts_ram_start__ = .
 *(.m_interrupts_ram)
                0x1fffe000                . = (. + M_VECTOR_RAM_SIZE)
                0x1fffe000                . = ALIGN (0x4)
                0x1fffe000                __interrupts_ram_end__ = .
                0x00000000                __VECTOR_RAM = DEFINED (__ram_vector_table__)?__VECTOR_RAM__:ORIGIN (m_interrupts)
                0x00000000                __RAM_VECTOR_TABLE_SIZE_BYTES = DEFINED (__ram_vector_table__)?(__interrupts_ram_end__ - __interrupts_ram_start__):0x0

.data           0x1fffe000        0x0 load address 0x00000570
                0x1fffe000                . = ALIGN (0x4)
                0x1fffe000                __DATA_RAM = .
                0x1fffe000                __data_start__ = .
 *(.data)
 *(.data*)
 *(.jcr*)
                0x1fffe000                . = ALIGN (0x4)
                0x1fffe000                __data_end__ = .
                0x00000570                __DATA_END = (__DATA_ROM + (__data_end__ - __data_start__))
                0x00040000                text_end = (ORIGIN (m_text) + 0x3fbf0)
                0x00000001                ASSERT ((__DATA_END <= text_end), region m_text overflowed with text and data)

.igot.plt       0x1fffe000        0x0
 .igot.plt      0x00000000        0x0 obj/startup.o

.bss            0x1fffe000        0x0
                0x1fffe000                . = ALIGN (0x4)
                0x1fffe000                __START_BSS = .
                0x1fffe000                __bss_start__ = .
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x1fffe000                . = ALIGN (0x4)
                0x1fffe000                __bss_end__ = .
                0x1fffe000                __END_BSS = .

.heap           0x1fffe000      0x400
                0x1fffe000                . = ALIGN (0x8)
                0x1fffe000                __end__ = .
                0x1fffe000                PROVIDE (end, .)
                0x1fffe000                __HeapBase = .
                0x1fffe400                . = (. + HEAP_SIZE)
 *fill*         0x1fffe000      0x400 
                0x1fffe400                __HeapLimit = .

.stack          0x1fffe400      0x400
                0x1fffe400                . = ALIGN (0x8)
                0x1fffe800                . = (. + STACK_SIZE)
 *fill*         0x1fffe400      0x400 
                0x20006000                __StackTop = (ORIGIN (m_data) + 0x8000)
                0x20005c00                __StackLimit = (__StackTop - STACK_SIZE)
                0x20006000                PROVIDE (__stack, __StackTop)

.ARM.attributes
                0x00000000       0x30
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x32 obj/startup.o
 .ARM.attributes
                0x00000032       0x32 obj/system_MKL46Z4.o
 .ARM.attributes
                0x00000064       0x32 obj/main.o
 .ARM.attributes
                0x00000096       0x1b obj/startup_MKL46Z4.o
                0x00000001                ASSERT ((__StackLimit >= __HeapLimit), region m_data overflowed with stack and heap)
OUTPUT(app_flash.elf elf32-littlearm)

.debug_info     0x00000000      0xafc
 .debug_info    0x00000000      0x395 obj/startup.o
 .debug_info    0x00000395      0x3da obj/system_MKL46Z4.o
 .debug_info    0x0000076f      0x38d obj/main.o

.debug_abbrev   0x00000000      0x2ee
 .debug_abbrev  0x00000000       0xfc obj/startup.o
 .debug_abbrev  0x000000fc      0x115 obj/system_MKL46Z4.o
 .debug_abbrev  0x00000211       0xdd obj/main.o

.debug_loc      0x00000000      0x1b3
 .debug_loc     0x00000000       0xa1 obj/startup.o
 .debug_loc     0x000000a1       0xcc obj/system_MKL46Z4.o
 .debug_loc     0x0000016d       0x46 obj/main.o

.debug_aranges  0x00000000       0x68
 .debug_aranges
                0x00000000       0x20 obj/startup.o
 .debug_aranges
                0x00000020       0x28 obj/system_MKL46Z4.o
 .debug_aranges
                0x00000048       0x20 obj/main.o

.debug_ranges   0x00000000       0x38
 .debug_ranges  0x00000000       0x10 obj/startup.o
 .debug_ranges  0x00000010       0x18 obj/system_MKL46Z4.o
 .debug_ranges  0x00000028       0x10 obj/main.o

.debug_line     0x00000000      0x449
 .debug_line    0x00000000      0x16f obj/startup.o
 .debug_line    0x0000016f      0x198 obj/system_MKL46Z4.o
 .debug_line    0x00000307      0x142 obj/main.o

.debug_str      0x00000000      0x4a8
 .debug_str     0x00000000      0x30f obj/startup.o
                                0x359 (size before relaxing)
 .debug_str     0x0000030f      0x13e obj/system_MKL46Z4.o
                                0x332 (size before relaxing)
 .debug_str     0x0000044d       0x5b obj/main.o
                                0x2f0 (size before relaxing)

.comment        0x00000000       0x70
 .comment       0x00000000       0x70 obj/startup.o
                                 0x71 (size before relaxing)
 .comment       0x00000000       0x71 obj/system_MKL46Z4.o
 .comment       0x00000000       0x71 obj/main.o

.debug_frame    0x00000000       0x94
 .debug_frame   0x00000000       0x2c obj/startup.o
 .debug_frame   0x0000002c       0x3c obj/system_MKL46Z4.o
 .debug_frame   0x00000068       0x2c obj/main.o
